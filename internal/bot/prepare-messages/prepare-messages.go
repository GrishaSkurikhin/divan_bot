package preparemessages

import (
	"fmt"
	"time"

	"github.com/GrishaSkurikhin/DivanBot/internal/models"
)

func FilmDescriptionPrev(film models.Film) string {
	return fmt.Sprintf("üé¨ <strong>%s</strong>\n\n%s\n\nüìÖ %s\nüìç %s",
		film.Name,
		film.Description,
		getDate(film.ShowDate),
		film.Location.Title,
	)
}

func FilmDescriptionFuture(film models.Film) string {
	var isCloseInfo string
	if film.IsOpen {
		isCloseInfo = "üü¢ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç–∞"
	} else {
		isCloseInfo = "üî¥ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∞"
	}

	return fmt.Sprintf("üé¨ %s\n\n%s\n\nüìÖ %s\nüìç %s\n üë• –í—Å–µ–≥–æ –º–µ—Å—Ç: %d\n%s",
		film.Name,
		film.Description,
		getDate(film.ShowDate),
		film.Location.Title,
		film.PlacesNum,
		isCloseInfo,
	)
}

func getDate(dateTime time.Time) string {
	day := dateTime.Day()
	year := dateTime.Year()
	monthEng := dateTime.Month().String()
	var monthRu string
	switch monthEng {
	case "January":
		monthRu = "—è–Ω–≤–∞—Ä—è"
	case "February":
		monthRu = "—Ñ–µ–≤—Ä–∞–ª—è"
	case "March":
		monthRu = "–º–∞—Ä—Ç–∞"
	case "April":
		monthRu = "–∞–ø—Ä–µ–ª—è"
	case "May":
		monthRu = "–º–∞—è"
	case "June":
		monthRu = "–∏—é–Ω—è"
	case "July":
		monthRu = "–∏—é–ª—è"
	case "August":
		monthRu = "–∞–≤–≥—É—Å—Ç–∞"
	case "September":
		monthRu = "—Å–µ–Ω—Ç—è–±—Ä—è"
	case "October":
		monthRu = "–æ–∫—Ç—è–±—Ä—è"
	case "November":
		monthRu = "–Ω–æ—è–±—Ä—è"
	case "December":
		monthRu = "–¥–µ–∫–∞–±—Ä—è"
	}
	return fmt.Sprintf("%d %s %d ", day, monthRu, year)
}
